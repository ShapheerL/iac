---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    global:
      fullnameOverride: *app

    controller:
        type: statefulset

    image:
      repository: ghcr.io/onedr0p/bazarr
      tag: 1.2.2

    env:
      TZ: "${TZ}"
      BAZARR__INSTANCE_NAME: *app
      BAZARR__PORT: &port 6767
      BAZARR__APPLICATION_URL: "https://{{ .Release.Name }}.${LOCAL_DOMAIN}"
      BAZARR__API_KEY: ${API_KEY_BAZARR}
      BAZARR__AUTHENTICATION_METHOD: External
      BAZARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
      BAZARR__LOG_LEVEL: info

    hostname: *app

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Bazarr
          gethomepage.dev/group: Media Automation
          gethomepage.dev/icon: bazarr
          gethomepage.dev/description: Subtitles Automation Tool
          gethomepage.dev/widget.type: bazarr
          gethomepage.dev/widget.url: "http://bazarr.media.${CLUSTER_DOMAIN}"
          gethomepage.dev/widget.key: "${API_KEY_BAZARR}"
        hosts:
          - host: &host "{{ .Release.Name }}.${LOCAL_DOMAIN}"
            paths:
              - path: /
        tls:
          - hosts:
              - *host

    podannotations:      
      secret.reloader.stakater.com/reload: homepage

    podSecurityContext:
      runAsUser: &context 1000
      runAsGroup: *context
      fsGroup: *context
      fsGroupChangePolicy: "OnRootMismatch"

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn-media

    persistence:
      media:
        enabled: true
        type: nfs
        server: "cockpit.${LOCAL_DOMAIN}"
        path: /mnt/data/
        mountPath: /data

    resources:
      requests:
        cpu: 10m
        memory: 500M
      limits:
        memory: 600M
