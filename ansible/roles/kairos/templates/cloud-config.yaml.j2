#cloud-config

users:
  - name: chkpwd
    shell: /bin/bash
    groups: [ admin ]
    ssh_authorized_keys: [ github:chkpwd ]

install:
  auto: true
  device: /dev/sda
  reboot: true

  grub_options:
    saved_entry: "Kairos"

  extra-dirs-rootfs: &longhorn [ /var/lib/longhorn ]

upgrade:
  extra-dirs-rootfs: *longhorn

reset:
  extra-dirs-rootfs: *longhorn

growpart:
  devices: [ "/" ]

stages:
  after-install-chroot:
    - name: "Install Longhorn Prerequisites"
      commands:
        - apt install parted nfs-common open-iscsi

boot:
  - name: "Setup Keymap"
    system_firstboot:
      keymap: us

  - name: "Setup Hostname"
    hostname: "cattles-k3s-{{ trunc 4 .MachineID }}"

  - name: "Formats /dev/nvme0n1 as ext4 if Kairos is on an SD device and /dev/nvme0n1 is unformatted"
    if: >-
      [[ $(lsblk -o NAME,LABEL | grep OEM) =~ "-sd" ]] &&
      [[ ! $(fdisk -lo type /dev/nvme0n1 | tail -n 1) =~ "Linux" ]]
    commands:
      - parted /dev/nvme0n1 --script -a optimal -- mklabel gpt mkpart longhorn ext4 0% 100%
      - &partition mkfs.ext4 -F /dev/nvme0n1p1

  - name: "Creates an ext4 partition on /dev/nvme0n1p1 if not present and Kairos is on an SD device"
    if: >-
      [[ $(lsblk -o NAME,LABEL | grep OEM) =~ "-sd" ]] &&
      [[ $(lsblk -no FSTYPE /dev/nvme0n1p1) != "ext4" ]]
    commands:
      - *partition

  - name: "Mount /dev/nvme0n1p1 under /var/lib/longhorn if it exists and Kairos is installed to /dev/sdX"
    if: >-
      [[ $(lsblk -o NAME,LABEL | grep OEM) =~ "-sd" ]] &&
      [[ $(lsblk -no FSTYPE /dev/nvme0n1p1) == "ext4" ]]
    commands:
      - umount /var/lib/longhorn
      - mount -o rw /dev/nvme0n1p1 /var/lib/longhorn

    - name: "Define Environment Variables"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
        CONTAINERD_NAMESPACE: k8s.io

    - name: "Add flux-system namespace manifest"
      files:
        - path: /var/lib/rancher/k3s/server/manifests/flux-system.yaml
          content: |
            apiVersion: v1
            kind: Namespace
            metadata:
              name: flux-system

    - name: "Add SOPS secret"
      files:
        - path: /var/lib/rancher/k3s/server/manifests/sops-secret.yaml
          content: |
            apiVersion: v1
            kind: Secret
            metadata:
              name: sops-age
              namespace: flux-system
            type: Opaque
            data:
              sops.asc: {[ AGE_KEY_SECRET_BASE64 ]}

    - name: "Set modprobe modules"
      modules:
        - iscsi_tcp

kubevip:
  enabled: true
  eip: {[ kairos_kubevip_address ]}

k3s:
  enabled: true
  args:
    - --disable=traefik,servicelb,metrics-server,local-storage
    - --write-kubeconfig-mode 0644

# -- p2p network configs
p2p:
  network_id: cattle-k3s
  disable_dht: true # Discover nodes only in the local network

  vpn:
    create: false
    use: false

  network_token: {[ P2P_NETWORK_TOKEN ]}

  auto:
    enable: true
    ha:
      enable: true
      master_nodes: 2
