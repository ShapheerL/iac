#cloud-config

users:
  - name: chkpwd
    shell: /bin/bash
    groups:
      - admin
    ssh_authorized_keys:
      - github:chkpwd

install:
  auto: true
  no-format: true
  reboot: true

  grub_options:
    saved_entry: "Kairos"

  extra-dirs-rootfs: &longhorn
    - /mnt/longhorn

upgrade:
  extra-dirs-rootfs: *longhorn

reset:
  extra-dirs-rootfs: *longhorn

growpart:
  devices: ["/"]
stages:
  kairos-install.pre.before:
    - if: '[ $(fdisk -l /dev/sda | grep sectors | head -n 1 | cut -d" " -f5) -lt $(fdisk -l /dev/nvme0n1 | grep sectors | head -n 1 | cut -d" " -f5) ]'
      name: "Partition /dev/sda"
      commands:
        - |
          parted --script --machine -- /dev/sda mklabel msdos
      layout: &partitions_layout
        device:
          path: /dev/sda
        expand_partition:
          size: 0 # All available space
        add_partitions:
          # all sizes bellow are in MB
          - fsLabel: COS_OEM
            size: 64
            pLabel: oem
          - fsLabel: COS_RECOVERY
            size: 8500
            pLabel: recovery
          - fsLabel: COS_STATE
            size: 18000
            pLabel: state
          - fsLabel: COS_PERSISTENT
            pLabel: persistent
            size: 25000
            filesystem: "ext4"
    - if: '[ $(fdisk -l /dev/sda | grep sectors | head -n 1 | cut -d" " -f5) -gt $(fdisk -l /dev/nvme0n1 | grep sectors | head -n 1 | cut -d" " -f5) ]'
      name: "Partition /dev/nvme0n1"
      commands:
        - |
          parted --script --machine -- /dev/nvme0n1 mklabel msdos
      layout:
        <<: *partitions_layout
        device:
          path: /dev/nvme0n1

  after-install-chroot:
    - name: "Install Longhorn Prerequisites"
      commands:
        - apt install parted nfs-common open-iscsi

  boot:
    - name: "Setup Keymap"
      system_firstboot:
        keymap: us

    - name: "Setup Hostname"
      hostname: "cattles-k3s-{{ trunc 4 .MachineID }}"

    - name: "Define Environment Variables"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
        CONTAINERD_NAMESPACE: k8s.io

    # -- Init Flux Namespace
    - name: "Add flux-system namespace manifest"
      files:
        - path: /var/lib/rancher/k3s/server/manifests/flux-system.yaml
          content: |
            apiVersion: v1
            kind: Namespace
            metadata:
              name: flux-system

    # -- Init SOPS Secrets
    - name: "Download SOPS secret"
      files:
        - path: /var/lib/rancher/k3s/server/manifests/sops-secret.yaml
          content: |
            apiVersion: v1
            kind: Secret
            metadata:
              name: sops-gpg
              namespace: flux-system
            type: Opaque
            data:
              sops.asc: {[ AGE_KEY_SECRET_BASE64 ]}

    - name: "Bootstrap with Flux"
      commands:
        - bash /usr/local/lib/extensions/flux/bootstrap.sh &

    - name: "Set modprobe modules"
      modules:
        - iscsi_tcp

kubevip:
  enabled: true
  eip: {[ kairos_kubevip_address ]}

k3s:
  enabled: true
  args:
    - --disable=traefik,servicelb

# -- p2p network configs
p2p:
  network_id: cattle-k3s
  disable_dht: true # Discover nodes only in the local network

  vpn:
    create: false
    use: false

  network_token: {[ P2P_NETWORK_TOKEN ]}

  auto:
    enable: true
    ha:
      enable: true
      master_nodes: 2

# -- Bundle installs
bundles:
  - targets: [ run://quay.io/kairos/community-bundles:flux_latest ]

# -- Bundle configs
flux:
  github:
    owner: chkpwd
    repository: iac
    path: kubernetes/
    components-extra: image-reflector-controller,image-automation-controller
